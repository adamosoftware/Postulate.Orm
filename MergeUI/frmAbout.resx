<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9g9O3mJVBqhxPgAAAABJRU5ErkJggg==
</value>
  </data>
</root>