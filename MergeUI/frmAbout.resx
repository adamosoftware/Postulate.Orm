<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>